"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("path"),t=require("chokidar"),n=require("minimatch"),o=require("fs-extra"),r=require("marky"),a=require("pretty-ms"),i=require("chalk");function d(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=d(t),u=d(n),l=d(a),c=d(i);const{log:f}=console,p=(t,n,o,r)=>{if(!1===n)return t;const a=o.substring(o.lastIndexOf("."),o.length),i=("object"==typeof n&&n.name?n.name:"string"==typeof n?e.basename(n):t).replace(/\[\bname\b\]/,t).replace(/\[\bext\b\]/,a||null);return r.has(o)||r.set(o,i),t!==i&&f(c.default`{dim renamed ${t} to ${i}}`),r.get(o)},m=(e,t,n)=>"object"==typeof t&&t.dest?t.dest.replace(/\[\bname\b\]/,e):n;exports.default=(t={})=>{const{globs:n=!1,clean:a=!0,dest:i="./package",cwd:d=process.cwd(),transform:y=!1}=t;if(!n)throw new Error("Missing { globs: [] } in rollup-plugin-globlin");let b,g,w,h=0;return{name:"rollup-plugin-globlin",options(e){b=void 0===e.watch},async buildStart(){if(h++)return;a&&await o.remove(i);const t=new Map,b=((t,n)=>async a=>{r.mark(a);const i=e.join(n,e.basename(a));await o.remove(i),t.delete(a),f(c.default`{bold.red deleted} {red ${i}} in {dim ${l.default(r.stop(a).duration)}}`)})(t,i),$=((t,n,a)=>async i=>{r.mark(i);const d=e.basename(i),s=await a(d,i);if("boolean"==typeof s||"string"==typeof s)await o.copy(i,e.join(m(d,s,n),p(d,s,i,t))),f(c.default`{bold copied} {cyan ${i}} in {dim ${l.default(r.stop(i).duration)}}`);else if("object"==typeof s){if(s.content&&"string"!=typeof s.content)throw new Error(`The ${i} content property did not return a string!`);s.dest=m(d,s,n),s.name=p(d,s,i,t),s.content?(await o.outputFile(e.join(s.dest,s.name),s.content,"utf8"),f(c.default`{bold modified} {cyan ${i}} in {dim ${l.default(r.stop(i).duration)}}`)):(await o.copy(i,e.join(s.dest,s.name)),f(c.default`{bold copied} {cyan ${i}} in {dim ${l.default(r.stop(i).duration)}}`))}})(t,i,((e,t)=>async(n,r)=>{if(!t||!r)return!1;if(!["function","object"].includes(typeof t))throw new Error(r+" transform must be of type object or function");try{o.existsSync(r)}catch(e){throw new Error(e)}const a=await o.readFile(r);if("function"==typeof t)return t({name:r,content:a,dest:e});if("object"==typeof t){if("string"==typeof t[n]&&t[n]!==n)return t[n];const o=Object.keys(t).find(e=>u.default(r,e));if(!o)return!1;if("string"==typeof t[o])return t[o];if("function"==typeof t[o])return t[o]({content:a,dest:e,name:r});f(c.default.dim(`The transform used by ${o} must of type function or string`))}})(i,y));g=s.default.watch(((e,t)=>[...e.filter(Boolean),"!**/node_modules/**",`!${t}/**`])(n,i),{cwd:d}),g.on("add",$),g.on("change",$),g.on("unlink",b),g.on("unlinkDir",b),g.on("error",e=>{throw e}),w=new Promise((e=>t=>e.on("ready",()=>{const n=e.getWatched();return f(`Watching ${Object.keys(n).length} paths`),t()}))(g)),f(c.default`{underline rollup-plugin-globlin v${"0.0.0"}}`)},async generateBundle(){await w},buildEnd(){b&&g.close()}}};
